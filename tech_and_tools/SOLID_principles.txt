
----------------- SOLID Principles -----------------

S -> Single Responsibility
O -> Open Closed
L -> Liskov Substitution
I -> Interface Segregation
D -> Dependency Inversion


[1] Single Responsibility:
	Each class should have only one sole purpose, and not be filled with excessive functionality.
	
[2] Open Closed:
	Classes should be open for extension, closed for modification.
	In other words, you should not have to rewrite an existing class for implementing new features.
	
[3] Liskob Substitution:
	This means that every subclass or derived class should be substitutable for their base or parent class.
	
[4] Interface Segregation:
	Interfaces should not force classes to implement what they can't do.
	Large interface should be divided into small ones.
	
[5] Dependency Inversion:
	Components should depend on abstractions, not on concretions.
	
	
	
	
	
	
	
Resource source: https://www.youtube.com/watch?v=_jDNAf3CzeY
