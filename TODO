
Todo:
	☐ Read some books:
		i) The Pragmatic Programmer, 20th Anniversary Edition
		ii) Effective Java
		iii) Clean Code: A Handbook of Agile Software Craftsmanship
		iv) Code Complete: A Practical Handbook of Software Construction, Second Edition
		
	☐ Read some topics:
		i) Design patterns: SOLID, GOF
	
	☐ Complete project



	class ListNode {
		
		int val;
		ListNode next;
		
		ListNode() {}
		ListNode(int val) { this.val = val; }
		ListNode(int val, ListNode next) { this.val = val; this.next = next; }
	}


public class MyClass {
	
	public ListNode makeLinkedList(int val) {
		return new ListNode(val);
	}
	
	public int makeNumber(ListNode ln) {
		StringBuilder sb = new StringBuilder("");
		while(ln != null) {
			sb.append(ln.val);
			ln = ln.next;
		}
		return Integer.parseInt(sb.reverse().toString());
	}
	
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
    	
    	String total = String.valueOf(makeNumber(l1) + makeNumber(l2));
    	
    	ListNode result;
    	for (int i = total.length(); i > 0; i--) {
    		makeLinkedList((int) total.charAt(i));
    		result = new ListNode();
    	}
    	
    	System.out.println("fafsda" + total);
    	
    	
    	
    	return null;       
    }
	
//	private void showValue(ListNode ln) {
//	
//		while(ln != null) {
//			System.out.println(ln.val);
//			ln = ln.next;
//		}
//	}
	
	public static void main(String args[]) {
		
		
		ListNode l1 = new ListNode(1);	
		l1.next = new ListNode(2);
		l1.next.next = new ListNode(3);	
		
		
		ListNode l2 = new ListNode(6);
		l2.next = new ListNode(7);
		l2.next.next = new ListNode(8);
	
		MyClass sl = new MyClass();
		ListNode result = sl.addTwoNumbers(l1, l2);
		//sl.showValue(result);

	}
}

  
